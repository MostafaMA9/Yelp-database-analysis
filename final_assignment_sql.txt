Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537 (by userid)
ix. User =  10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:

	--simply write each column name in Where clause to check if there's Null value
	Select cool
	From user
	Where cool is Null

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.65
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	Select city
	,sum (review_count) as tot_reviews
	From business
	Group by city
	order by tot_reviews desc
	
	Copy and Paste the Result Below:
	
+-----------------+-------------+
| city            | tot_reviews |
+-----------------+-------------+
| Las Vegas       |       82854 |
| Phoenix         |       34503 |
| Toronto         |       24113 |
| Scottsdale      |       20614 |
| Charlotte       |       12523 |
| Henderson       |       10871 |
| Tempe           |       10504 |
| Pittsburgh      |        9798 |
| Montréal        |        9448 |
| Chandler        |        8112 |
| Mesa            |        6875 |
| Gilbert         |        6380 |
| Cleveland       |        5593 |
| Madison         |        5265 |
| Glendale        |        4406 |
| Mississauga     |        3814 |
| Edinburgh       |        2792 |
| Peoria          |        2624 |
| North Las Vegas |        2438 |
| Markham         |        2352 |
| Champaign       |        2029 |
| Stuttgart       |        1849 |
| Surprise        |        1520 |
| Lakewood        |        1465 |
| Goodyear        |        1155 |
+-----------------+-------------

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select stars
, sum(review_count) as count
From business
Where city = 'Avon'
Group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+

ii. Beachwood

SQL code used to arrive at answer:

Select stars
, sum(review_count) as count
From business
Where city = 'Beachwood'
Group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
Select name, review_count
From user
Order by review_count desc
Limit 3; --only filter top 3 users
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: No. Based on the following table, it is clear that users with more reviews don't have necessarily more fans. For example Gerald has more reviews than Harald but has less fans.


+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+


	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
There are more reviews with the word "love" 

+------------+------------+
| love_count | hate_count |
+------------+------------+
|       1780 |        232 |
+------------+------------+
	
	SQL code used to arrive at answer:

SELECT
    SUM(CASE WHEN text LIKE '%love%' THEN 1 ELSE 0 END) AS love_count,
    SUM(CASE WHEN text LIKE '%hate%' THEN 1 ELSE 0 END) AS hate_count
FROM review;
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

Select name, fans
From user
Order by fans desc
Limit 10; --only filter top 10 users with most fans
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

I chose "Toronto" as the city and "Food" as the category.
	
i. Do the two groups you chose to analyze have a different distribution of hours? 

There is only one business included in 2-3 star rating that is open everyday from 8 to 22 . On the other hand 2 businesses are included in 4-5 stars rating, One is open Tuesday to Sunday from 15 to 21, and the other business is open everyday from 16 or 18 to 2. 
So we can say that the distribution of hours is different for two groups.


ii. Do the two groups you chose to analyze have a different number of reviews?
         
Yes. 4-5 stars businesses have more reviews (26 and 16) compared to 2-3 stars businesses (10)
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

The location and neighborhood don’t provide sufficient details to reach any major conclusion. We don't have any information about the characteristics of the different locations, thus no comparison can be made.

+--------+--------------+---------+--------------+----------+-----------------------+
| rating | name         | city    | review_count | category | hours                 |
+--------+--------------+---------+--------------+----------+-----------------------+
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Friday|18:00-2:00     |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Monday|16:00-2:00     |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Saturday|16:00-2:00   |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Sunday|16:00-2:00     |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Thursday|18:00-2:00   |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Tuesday|18:00-2:00    |
| 4-5    | Cabin Fever  | Toronto |           26 | Food     | Wednesday|18:00-2:00  |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Friday|15:00-21:00    |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Saturday|11:00-21:00  |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Sunday|11:00-21:00    |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Thursday|15:00-21:00  |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Tuesday|15:00-21:00   |
| 4-5    | Halo Brewery | Toronto |           15 | Food     | Wednesday|15:00-21:00 |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Friday|8:00-22:00     |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Monday|8:00-22:00     |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Saturday|8:00-22:00   |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Sunday|8:00-22:00     |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Thursday|8:00-22:00   |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Tuesday|8:00-22:00    |
| 2-3    | Loblaws      | Toronto |           10 | Food     | Wednesday|8:00-22:00  |
+--------+--------------+---------+--------------+----------+-----------------------+


SQL code used for analysis:

Select 
    Case
    When stars >= 4 Then '4-5'
    When (stars >= 2 and stars <=3) Then '2-3'
    End as rating,

    name,
    city,
    review_count,
    category,
    hours.hours

From business inner join category on business.id = category.business_id
inner join hours on business.id = hours.business_id

Where city = 'Toronto'
And category = 'Food'
Order by name,hours
	
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
	businesses that are open tend to have more reviews on average compared to those that are closed.

+--------------------+---------+
| Avg (review_count) | is_open |
+--------------------+---------+
| 23.198026315789473 |       0 |
| 31.757075471698112 |       1 |
+--------------------+---------+
         
ii. Difference 2:
         
         The average star rating is higher for open businesses compared to closed businesses
         
SQL code used for analysis:

Select 
is_open,
Avg (Stars),
Avg (review_count)
From business 
Group by is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	
	Being an elite members is correlated with having more fans or having higher rating?
         

         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                For this part, I've decided to analyze the average rating, reviews and total fans of different users including elite users and non-elite users. I wanted to see if an elite user has more reviews, higher rating or more fans than a Non-elite user. SO I've elite-years table to identify elite and non-elite users in the user table.        
                  
iii. Output of your finished dataset:
         

	Non- elite users : 

+--------------------+--------------------+--------------------+
|         avg_rviews |         avg_rating |           avg_fans |
+--------------------+--------------------+--------------------+
| 23.726024651768714 | 3.6998005812205608 | 1.4479406754183786 |
+--------------------+--------------------+--------------------+

	Elite users:

+-------------------+--------------------+------------------+
| Avg(review_count) | Avg(average_stars) |        Avg(fans) |
+-------------------+--------------------+------------------+
| 424.9647058823529 | 3.4787058823529438 | 32.1764705882353 |
+-------------------+--------------------+------------------+   

Based on this output, it is evident that on average, elite users had significantly more reviews than non-elite ones, while the average rating of non-elite users are higher than elite-users. The reason might be that elite users are more experienced and their rating seems to be more rational then non-elite ones.
Furthermore, elite users have 32 fans on average while it's less than 2 for non-elite ones  

iv. Provide the SQL code you used to create your final dataset:


--elite members
Select 

    Avg(review_count),
    Avg(average_stars),
    Avg(fans)

From user inner join elite_years as ey
    on user.id = ey.user_id

-- for Non-elite users
Select 

    Avg(review_count) as avg_rviews,
    Avg(average_stars) as avg_rating,
    Avg(fans) as avg_fans

From user left join elite_years as ey
     on user.id = ey.user_id

Where ey.user_id is NULL